DROP DATABASE SUNCARE_HOSPITAL;
CREATE DATABASE IF NOT EXISTS SUNCARE_HOSPITAL DEFAULT  CHARACTER SET utf8;
USE SUNCARE_HOSPITAL;

-- -----------------------------------------------------
-- Table USER
-- -----------------------------------------------------

DROP TABLE IF EXISTS USER;

CREATE TABLE IF NOT EXISTS USER(
       USER_ID INT NOT NULL AUTO_INCREMENT,
       PASSWORD_HASH VARCHAR(60) NOT NULL,
       USERNAME VARCHAR(45) NOT NULL,
       PRIMARY KEY(USER_ID)
);

-- -----------------------------------------------------
-- Table GENDER
-- -----------------------------------------------------

CREATE TABLE GENDER(
	   ID INTEGER NOT NULL AUTO_INCREMENT,
       GENDER_NAME VARCHAR(50) NOT NULL,
       PRIMARY KEY (ID)
);

-- -----------------------------------------------------
-- Table DOCTOR
-- -----------------------------------------------------

DROP TABLE IF EXISTS DOCTOR;

CREATE TABLE IF NOT EXISTS DOCTOR(
       DOCTOR_ID INT NOT NULL AUTO_INCREMENT,
       USER_ID INT DEFAULT NULL,
       DOCTOR_NAME VARCHAR(45) NOT NULL,
       IMAGE_LINK VARCHAR(200) DEFAULT NULL,
       GENDER INT NOT NULL,
       PHONE VARCHAR(45) NOT NULL,
       EMAIL VARCHAR(45) NOT NULL,
       PRIMARY KEY (DOCTOR_ID),
       UNIQUE INDEX USER_ID_UNIQUE (USER_ID ASC),
	   CONSTRAINT USER_DOCTOR_USER_ID_FK
			FOREIGN KEY (USER_ID)
            REFERENCES USER(USER_ID)
            ON DELETE NO ACTION
            ON UPDATE CASCADE,
	   CONSTRAINT GENDER_DCOTOR_GENDER_FK
		FOREIGN KEY (GENDER)
		REFERENCES GENDER(ID)
        ON DELETE RESTRICT
        ON UPDATE CASCADE
);

-- -----------------------------------------------------
-- Table PATIENT
-- -----------------------------------------------------

DROP TABLE IF EXISTS PATIENT;


CREATE TABLE IF NOT EXISTS PATIENT(
     PATIENT_ID INT NOT NULL AUTO_INCREMENT,
     PATIENT_NAME VARCHAR(45) NOT NULL,
     PHONE VARCHAR(45) NOT NULL,
     EMAIL VARCHAR(45) DEFAULT NULL,
     GENDER INT NOT NULL,
     ADDRESS VARCHAR(45) DEFAULT NULL,
     USER_ID INT DEFAULT NULL,
     DATE_OF_BIRTH DATE NULL,
     PRIMARY KEY (PATIENT_ID),
     IMAGE_LINK VARCHAR(100),
     DELETE_LINK VARCHAR(100),
     CONSTRAINT USER_PATIENT_USER_ID_FK
		FOREIGN KEY (USER_ID)
        REFERENCES USER(USER_ID)
        ON DELETE NO ACTION
        ON UPDATE CASCADE,
	CONSTRAINT GENDER_PATIENT_GENDER_FK
		FOREIGN KEY (GENDER)
		REFERENCES GENDER(ID)
        ON DELETE RESTRICT
        ON UPDATE CASCADE
);


-- -----------------------------------------------------
-- Table MEDICINE
-- -----------------------------------------------------


DROP TABLE IF EXISTS MEDICINE;

CREATE TABLE IF NOT EXISTS MEDICINE (
  MEDICINE_ID INT NOT NULL AUTO_INCREMENT,
  MEDICINE_NAME VARCHAR(45) NOT NULL,
  `GROUP` VARCHAR(45) NOT NULL,
  PRIMARY KEY (MEDICINE_ID)
);


-- -----------------------------------------------------
-- Table APPOINTMENT_STATUS
-- -----------------------------------------------------

DROP TABLE IF EXISTS APPOINTMENT_STATUS;

CREATE TABLE IF NOT EXISTS APPOINTMENT_STATUS(
       STATUS_ID INT NOT NULL AUTO_INCREMENT,
       STATUS VARCHAR(45) NOT NULL,
       PRIMARY KEY (STATUS_ID)
);

-- -----------------------------------------------------
-- Table APPOINTMENT
-- -----------------------------------------------------

DROP TABLE IF EXISTS APPONTMENT;

CREATE TABLE IF NOT EXISTS APPOINTMENT (
  APPOINTMENT_ID INT NOT NULL AUTO_INCREMENT,
  PATIENT_ID INT NOT NULL,
  DOCTOR_ID INT NOT NULL,
  DATE DATE NOT NULL,
  START_TIME TIME NOT NULL,
  END_TIME TIME NOT NULL,
  STATUS_ID INT NOT NULL,
  PRIMARY KEY (APPOINTMENT_ID),
  CONSTRAINT APPOINTMENTS_PATIENTS_PATIENT_ID_FK
    FOREIGN KEY (PATIENT_ID)
    REFERENCES PATIENT (PATIENT_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT APPOINTMENT_DOCTORS_DOCTOR_ID_FK
    FOREIGN KEY (DOCTOR_ID)
    REFERENCES DOCTOR (DOCTOR_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT APPOINTMENT_STATUS_FK
	FOREIGN KEY (STATUS_ID)
    REFERENCES APPOINTMENT_STATUS(STATUS_ID)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT
);


-- -----------------------------------------------------
-- Table LABORATORY_TEST
-- -----------------------------------------------------

DROP TABLE IF EXISTS LABORATORY_TEST ;

CREATE TABLE IF NOT EXISTS LABORATORY_TEST (
  TEST_ID INT NOT NULL AUTO_INCREMENT,
  TEST_NAME VARCHAR(45) NOT NULL,
  PRICE DOUBLE NOT NULL,
  PRIMARY KEY (TEST_ID)
);


-- -----------------------------------------------------
-- Table DEGREE
-- -----------------------------------------------------
DROP TABLE IF EXISTS DEGREE ;

CREATE TABLE IF NOT EXISTS DEGREE (
  DEGREE_ID INT NOT NULL AUTO_INCREMENT,
  DEGREE VARCHAR(45) NOT NULL,
  PRIMARY KEY (DEGREE_ID)
);


-- -----------------------------------------------------
-- Table SUBJECT
-- -----------------------------------------------------
DROP TABLE IF EXISTS SUBJECT ;

CREATE TABLE IF NOT EXISTS SUBJECT (
  SUBJECT_ID INT NOT NULL AUTO_INCREMENT,
  SUBJECT VARCHAR(45) NOT NULL,
  PRIMARY KEY (SUBJECT_ID)
);



-- -----------------------------------------------------
-- Table INSTITUTION
-- -----------------------------------------------------
DROP TABLE IF EXISTS INSTITUTION ;

CREATE TABLE IF NOT EXISTS INSTITUTION (
  INSTITUTION_ID INT NOT NULL AUTO_INCREMENT,
  NAME VARCHAR(100) NOT NULL,
  PRIMARY KEY (INSTITUTION_ID)
);



-- -----------------------------------------------------
-- Table DOCTOR_DETAILS
-- -----------------------------------------------------
DROP TABLE IF EXISTS DOCTOR_DETAILS ;

CREATE TABLE IF NOT EXISTS DOCTOR_DETAILS (
  DOCTOR_ID INT NOT NULL,
  DEGREE_ID INT NOT NULL,
  SUBJECT_ID INT NOT NULL,
  INSTITUTION_ID INT NOT NULL,
  DATE DATE NOT NULL,
  PRIMARY KEY (DOCTOR_ID, DEGREE_ID, SUBJECT_ID),
  CONSTRAINT DEGREES_DOCTORS_DETAILS_DOCTOR_ID_FK
    FOREIGN KEY (DEGREE_ID)
    REFERENCES DEGREE (DEGREE_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT SUBJECTS_DOCTORS_DETAILS_SUBJECT_ID_FK
    FOREIGN KEY (SUBJECT_ID)
    REFERENCES SUBJECT (SUBJECT_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT DOCTORS_DOCTORS_DETAILS_DOCTOR_ID_FK
    FOREIGN KEY (DOCTOR_ID)
    REFERENCES DOCTOR (DOCTOR_ID)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT INSTITUTION_DOCTOR_DETAILS_INSTITUITION_ID
    FOREIGN KEY (INSTITUTION_ID)
    REFERENCES INSTITUTION (INSTITUTION_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);


-- -----------------------------------------------------
-- Table PRESCRIPTION
-- -----------------------------------------------------
DROP TABLE IF EXISTS PRESCRIPTION ;

CREATE TABLE IF NOT EXISTS PRESCRIPTION (
  PRESCRIPTION_ID INT NOT NULL AUTO_INCREMENT,
  APPOINTMENT_ID INT NOT NULL,
  WEIGHT INT NULL,
  BLOOD_PRESSURE VARCHAR(10),
  PREVIOUS_HISTORY VARCHAR(50),
  PRIMARY KEY (PRESCRIPTION_ID),
  UNIQUE INDEX APPOINTMENT_ID_UNIQUE (APPOINTMENT_ID ASC),
  CONSTRAINT APPOINTMENTS_PRESCRIPTION_APPOINTMENT_ID
    FOREIGN KEY (APPOINTMENT_ID)
    REFERENCES APPOINTMENT (APPOINTMENT_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);


-- -----------------------------------------------------
-- Table PRESCRIBED_TEST
-- -----------------------------------------------------
DROP TABLE IF EXISTS PRESCRIBED_TEST ;

CREATE TABLE IF NOT EXISTS PRESCRIBED_TEST (
  PRESCRIBED_TEST_ID INT NOT NULL AUTO_INCREMENT,
  PRESCRIPTION_ID INT NOT NULL,
  TEST_ID INT NOT NULL,
  PRIMARY KEY (PRESCRIBED_TEST_ID),
  CONSTRAINT PRESCRIPTION_PRESCRIPTION_TEST_PRESCRIPTION_ID_FK
    FOREIGN KEY (PRESCRIPTION_ID)
    REFERENCES PRESCRIPTION (PRESCRIPTION_ID)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT LABORATORY_TEST_PRESCRIPTION_DETAIL_TEST_ID_FK
    FOREIGN KEY (TEST_ID)
    REFERENCES LABORATORY_TEST (TEST_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);


-- -----------------------------------------------------
-- Table TEST_STATUS
-- -----------------------------------------------------
DROP TABLE IF EXISTS TEST_STATUS ;

CREATE TABLE TEST_STATUS(
    STATUS_ID INTEGER,
    STATUS VARCHAR(20) NOT NULL,
    CONSTRAINT STATUS_ID_PK PRIMARY KEY (STATUS_ID)
);


-- -----------------------------------------------------
-- Table PATIENT_TEST
-- -----------------------------------------------------
DROP TABLE IF EXISTS PATIENT_TEST ;

CREATE TABLE IF NOT EXISTS PATIENT_TEST (
  PRESCRIBED_TEST_ID INT NOT NULL,
  TEST_DATE DATE NOT NULL,
  STATUS_ID INTEGER NOT NULL DEFAULT 1,
  PRIMARY KEY (PRESCRIBED_TEST_ID),
  UNIQUE INDEX PRESCRIBED_TEST_ID_UNIQUE (PRESCRIBED_TEST_ID ASC),
  CONSTRAINT PRESCRIBED_TEST_PATIENT_TEST_PRESCRIBED_TEST_ID_FK
    FOREIGN KEY (PRESCRIBED_TEST_ID)
    REFERENCES PRESCRIBED_TEST (PRESCRIBED_TEST_ID)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT TEST_STATUS_ID_FK FOREIGN KEY  (STATUS_ID) REFERENCES TEST_STATUS(STATUS_ID)
);


-- -----------------------------------------------------
-- Table PRESCRIBED_MEDICINE
-- -----------------------------------------------------
DROP TABLE IF EXISTS PRESCRIBED_MEDICINE ;

CREATE TABLE IF NOT EXISTS PRESCRIBED_MEDICINE (
  PRESCRIPTION_ID INT NOT NULL,
  MEDICINE_ID INT NOT NULL,
  DURATION INT NOT NULL,
  MORNING INTEGER,
  NOON INTEGER,
  NIGHT INTEGER,
  CONSTRAINT PRESCRIPTIONS_PRESCRIPTION_DETAIL_PRESCRIPTION_ID_FK
    FOREIGN KEY (PRESCRIPTION_ID)
    REFERENCES PRESCRIPTION (PRESCRIPTION_ID)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT MEDICINE_PRESCRIPTION_DETAIL_MEDICINE_ID_FK
    FOREIGN KEY (MEDICINE_ID)
    REFERENCES MEDICINE (MEDICINE_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table HOSPITAL_REVIEW
-- -----------------------------------------------------
DROP TABLE IF EXISTS HOSPITAL_REVIEW ;

CREATE TABLE IF NOT EXISTS HOSPITAL_REVIEW (
  USER_ID INT NOT NULL,
  COMMENT VARCHAR(500) NOT NULL,
  STAR INT NOT NULL DEFAULT 5 CHECK(STAR BETWEEN 0 AND 5),
  PRIMARY KEY (USER_ID),
  CONSTRAINT HOSPITAL_REVIEW_USER_USER_ID_FK
    FOREIGN KEY (USER_ID)
    REFERENCES USER (USER_ID)
    ON DELETE CASCADE
    ON UPDATE CASCADE
);


-- -----------------------------------------------------
-- Table ROLE
-- -----------------------------------------------------
DROP TABLE IF EXISTS ROLE ;

CREATE TABLE IF NOT EXISTS ROLE (
  ROLE_ID INT NOT NULL AUTO_INCREMENT,
  ROLE_NAME VARCHAR(45) NOT NULL,
  DESCRIPTION VARCHAR(500) NULL,
  PRIMARY KEY (ROLE_ID)
);


-- -----------------------------------------------------
-- Table PERMISSION
-- -----------------------------------------------------
DROP TABLE IF EXISTS PERMISSION ;

CREATE TABLE IF NOT EXISTS PERMISSION (
  PERMISSION_ID INT NOT NULL AUTO_INCREMENT,
  TABLE_NAME VARCHAR(45) NOT NULL,
  CAN_CREATE TINYINT NOT NULL DEFAULT 0,
  CAN_DELETE TINYINT NOT NULL DEFAULT 0,
  CAN_SELECT TINYINT NOT NULL DEFAULT 0,
  CAN_UPDATE TINYINT NOT NULL DEFAULT 0,
  PRIMARY KEY (PERMISSION_ID)
);


-- -----------------------------------------------------
-- Table ROLE_PERMISSION
-- -----------------------------------------------------
DROP TABLE IF EXISTS ROLE_PERMISSION ;

CREATE TABLE IF NOT EXISTS ROLE_PERMISSION (
  ROLE_ID INT NOT NULL,
  PERMISSION_ID INT NOT NULL,
  PRIMARY KEY (ROLE_ID, PERMISSION_ID),
  CONSTRAINT PERMISSION_ROLE_PERMISSION_PERMISSION_ID_FK
    FOREIGN KEY (PERMISSION_ID)
    REFERENCES PERMISSION (PERMISSION_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT ROLE_ROLE_PERMISSION_ROLE_ID_FK
    FOREIGN KEY (ROLE_ID)
    REFERENCES ROLE (ROLE_ID)
    ON DELETE CASCADE
    ON UPDATE CASCADE
);


-- -----------------------------------------------------
-- Table USER_ROLE
-- -----------------------------------------------------
DROP TABLE IF EXISTS USER_ROLE ;

CREATE TABLE IF NOT EXISTS USER_ROLE (
  USER_ID INT NOT NULL,
  ROLE_ID INT NOT NULL,
  PRIMARY KEY (USER_ID, ROLE_ID),
  CONSTRAINT USER_USER_ROLE_USER_ID_EK
    FOREIGN KEY (USER_ID)
    REFERENCES USER (USER_ID)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT ROLE_USER_ROLE_ROLE_ID_EK
    FOREIGN KEY (ROLE_ID)
    REFERENCES ROLE (ROLE_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);


-- -----------------------------------------------------
-- Table CLINICAL_NOTES
-- -----------------------------------------------------
DROP TABLE IF EXISTS CLINICAL_NOTES ;

CREATE TABLE IF NOT EXISTS CLINICAL_NOTES (
  ID INT NOT NULL AUTO_INCREMENT,
  PRESCRIPTION_ID INT NOT NULL,
  DESCRIPTION VARCHAR(200) NOT NULL,
  PRIMARY KEY (ID),
  CONSTRAINT PRESCRIPTION_CLINICAL_NOTES_PRESCRIPTION_ID_FK
    FOREIGN KEY (PRESCRIPTION_ID)
    REFERENCES PRESCRIPTION (PRESCRIPTION_ID)
    ON DELETE CASCADE
    ON UPDATE CASCADE
);


-- -----------------------------------------------------
-- Table DESIGNATION
-- -----------------------------------------------------
DROP TABLE IF EXISTS DESIGNATION ;

CREATE TABLE IF NOT EXISTS DESIGNATION (
  DESIGNATION_ID INT NOT NULL AUTO_INCREMENT,
  DESIGNATION VARCHAR(45) NOT NULL,
  PRIMARY KEY (DESIGNATION_ID)
);


-- -----------------------------------------------------
-- Table DOCTOR_DESIGNATION
-- -----------------------------------------------------
DROP TABLE IF EXISTS DOCTOR_DESIGNATION ;

CREATE TABLE IF NOT EXISTS DOCTOR_DESIGNATION (
  DOCTOR_ID INT NOT NULL,
  DESIGNATION_ID INT NOT NULL,
  INSTITUTION_ID INT NOT NULL,
  CONSTRAINT DOCTOR_DESIGNATION_DOCTOR_ID_FK
    FOREIGN KEY (DOCTOR_ID)
    REFERENCES DOCTOR (DOCTOR_ID)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT DOCTOR_DESIGNATION_DESIGNATION_DESIGNATION_ID_FK
    FOREIGN KEY (DESIGNATION_ID)
    REFERENCES DESIGNATION (DESIGNATION_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT DOCTOR_DESIGNATION_INSTITITUTION_INSTITUTION_ID_FK
    FOREIGN KEY (INSTITUTION_ID)
    REFERENCES INSTITUTION (INSTITUTION_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);


-- -----------------------------------------------------
-- Table WEEK_DAYS
-- -----------------------------------------------------
DROP TABLE IF EXISTS WEEK_DAYS ;

CREATE TABLE IF NOT EXISTS WEEK_DAYS (
  DAY_ID INT NOT NULL,
  WEEK_DAY VARCHAR(45) NOT NULL,
  PRIMARY KEY (DAY_ID)
);


-- -----------------------------------------------------
-- Table PRACTICE_DAYS
-- -----------------------------------------------------
DROP TABLE IF EXISTS PRACTICE_DAYS ;

CREATE TABLE IF NOT EXISTS PRACTICE_DAYS (
  DOCTOR_ID INT NOT NULL,
  DAY INT NOT NULL,
  `FROM` TIME NOT NULL,
  `TO` TIME NOT NULL,
  CONSTRAINT DOCTORS_PRACTICE_DAYS_DOCTOR_ID_FK
    FOREIGN KEY (DOCTOR_ID)
    REFERENCES DOCTOR (DOCTOR_ID)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT WEEK_DAYS_PRACTICE_DAYS_DAY_FK
    FOREIGN KEY (DAY)
    REFERENCES WEEK_DAYS (DAY_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

